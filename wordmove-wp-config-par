#!/usr/bin/php
<?php

function startsWith($haystack, $needle) {
	return $needle === "" || strpos($haystack, $needle) === 0;
}
function array_insert(&$array, $element, $position) {
	if (count($array) == 0) {
		$array[] = $element;
	}
	elseif (is_numeric($position) && $position < 0) {
		if((count($array)+position) < 0) {
		$array = array_insert($array,$element,0);
		}
		else {
		$array[count($array)+$position] = $element;
		}
	}
	elseif (is_numeric($position) && isset($array[$position])) {
		$part1 = array_slice($array,0,$position,true);
		$part2 = array_slice($array,$position,null,true);
		$array = array_merge($part1,array($position=>$element),$part2);
		foreach($array as $key=>$item) {
		if (is_null($item)) {
			unset($array[$key]);
		}
		}
	}
	elseif (is_null($position)) {
		$array[] = $element;
	}  
	elseif (!isset($array[$position])) {
		$array[$position] = $element;
	}
	$array = array_merge($array);
	return $array;
}

if ($argc == 1 || $argc > 3 || in_array($argv[1], array('--help', '-help', '-h', '-?'))) {
?>

wordmove-wp-config-fpar V 1.0
This script add to the wp-config.php some parameter ready 
Made by Mte90 - http://www.mte90.net

  Usage:
  <?php echo $argv[0]; ?> [security|debug|misc]
  
  The parameter it's needed for choose the type of parameter to add to the wp-config.
  
  security: 
	  DISALLOW_FILE_EDIT:true
  misc: 
	  WP_POST_REVISIONS: 3
  debug: 
	  WP_DEBUG:			 true
	  WP_DEBUG_DISPLAY:	 false
	  SAVEQUERIES:		 true
	This parameters for debug working better with the Debug Bar plugin
	  
  With the --help, -help, -h, or -? options, you can get this help.

<?php
} else {
	if(file_exists('wp-config.php')) {
		//Read the wp-config file of the folder
		$wpconfig = file('wp-config.php');
		$row = count($wpconfig) - 9;
		$doit = array();
		$ok = true;
		//Replace the content!
		for ($i = 90; $i <= $row; $i++) {
			if($argv[1] == 'security'){
				if(!isset($doit['DISALLOW_FILE_EDIT'])){
					if(startsWith($wpconfig[$i],"define('DISALLOW_FILE_EDIT")) {
						$wpconfig[$i] = "define('DISALLOW_FILE_EDIT', true);\n";
						$doit['DISALLOW_FILE_EDIT'] = 1;
					} elseif($i == $row) {
						$wpconfig = array_insert($wpconfig,"define('DISALLOW_FILE_EDIT', true);\n",$row);
						$doit['DISALLOW_FILE_EDIT'] = 1;
					}
				}
			}elseif($argv[1] == 'misc'){
				if(!isset($doit['WP_POST_REVISIONS'])){
					if(startsWith($wpconfig[$i],"define('WP_POST_REVISIONS")) {
						$wpconfig[$i] = "define('WP_POST_REVISIONS', 3);\n";
						$doit['WP_POST_REVISIONS'] = 1;
					} elseif($i == $row) {
						$wpconfig = array_insert($wpconfig,"define('WP_POST_REVISIONS', 3);\n",$row);
						$doit['WP_POST_REVISIONS'] = 1;
					}
				}
			}elseif($argv[1] == 'debug'){
				if(!isset($doit['WP_DEBUG'])){
					if(startsWith($wpconfig[$i],"define('WP_DEBUG'")) {
						$wpconfig[$i] = "define('WP_DEBUG', true);\n";
						$doit['WP_DEBUG'] = 1;
					} elseif($i == $row) {
						$wpconfig = array_insert($wpconfig,"define('WP_DEBUG', true);\n",$row);
						$doit['WP_DEBUG'] = 1;
					}
					if(startsWith($wpconfig[$i],"define('WP_DEBUG_DISPLAY'")) {
						$wpconfig[$i] = "define('WP_DEBUG_DISPLAY', false);\n";
						$doit['WP_DEBUG_DISPLAY'] = 1;
					} elseif($i == $row) {
						$wpconfig = array_insert($wpconfig,"define('WP_DEBUG_DISPLAY', false);\n",$row);
						$doit['WP_DEBUG_DISPLAY'] = 1;
					}
					if(startsWith($wpconfig[$i],"define('SAVEQUERIES'")) {
						$wpconfig[$i] = "define('SAVEQUERIES', true);\n";
						$doit['SAVEQUERIES'] = 1;
					} elseif($i == $row) {
						$wpconfig = array_insert($wpconfig,"define('SAVEQUERIES', true);\n",$row);
						$doit['SAVEQUERIES'] = 1;
					}
				}
			} else {
				echo 'Wrong parameter! ex: [security|debug|misc]';
				$ok = false;
			}
		}
		
		if($ok == true) {
			//Save the file with a prefix of the host
			file_put_contents('wp-config.php',$wpconfig);
			
			echo 'File modified!'."\n";
			echo 'Good job by Mte90!'."\n";
		}
		
    } else {
		echo 'ERROR: Missing wp-config.php!'."\n";
    }
}

?>
